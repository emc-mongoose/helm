{{- define "mnodes" -}}
{{- $dr := dict "nodes" (list) -}}
{{- $name := .Chart.Name -}}
{{- range int .Values.replicas | until -}}
{{- $noop := printf "%s-%d.%s" $name . $name | append $dr.nodes | set $dr "nodes" -}}
{{- end -}}
{{- join "," $dr.nodes -}}
{{- end -}}

apiVersion: v1
kind: Pod
metadata:
  name: {{ .Chart.Name }}
  labels:
    mongoose-role: entry-node

spec:
  initContainers:
  - name: wait-for-nodes
    image: busybox:1.28
    command: ['sh',
              '-c',
              '{{ template "mongoose.makeShellCommand" . }}'
             ]
  containers:
    - image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
      imagePullPolicy: {{ .Values.image.pullPolicy }}
      name: mongoose-container
      args: {{- printf " [" -}}
                  
            {{- $nodeCount := ((add (.Values.replicas|int) -1)|int) -}}
            {{- if gt $nodeCount 0 -}}
              {{- printf "\"--load-step-node-addrs=" -}}
              {{ template "mnodes" . }}
              {{- printf "\"" -}}
            {{- end -}}

            {{ if (ne $.Values.args "") and (ne $.Values.args nil) }}
              {{- if gt $nodeCount 0 -}}
                {{- printf "," }}
              {{ end }}
              {{- .Values.args -}}
            {{ end }}

            {{ if (eq $.Values.args "") or (eq $.Values.args nil) }}
              --storage-auth-uid={{ required "s3.accessKey is required" .Values.s3.accessKey }}
              --storage-auth-secret={{ required "s3.secretKey is required" .Values.s3.secretKey }}
              --storage-net-node-addrs={{ required "s3.addresses is required" .Values.s3.addresses }}
            {{ end }}

            {{- printf "]" }}

      {{- with .Values.resources }}
      resources:
        limits:
          cpu: {{ quote .limits.cpu }}
          memory: {{ quote .limits.memory }}
        requests:
          cpu: {{ quote .requests.cpu }}
          memory: {{ quote .requests.memory }}
      {{- end }}

  restartPolicy: OnFailure
